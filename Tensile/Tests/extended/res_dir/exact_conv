
################################################################################
#
#  Tensile v4.17.0
# Restoring default globalParameters
#  Config: /home/alex/Tensile/Tensile/Tests/extended/tensor_contraction/exact_conv.yaml
#
################################################################################

# Restoring default globalParameters
# Detected local GPU with ISA: gfx908
# Asm caps for gfx803:SupportedISA=1 HasExplicitCO=0 HasExplicitNC=0 HasDirectToLds=1 HasAddLshl=0 HasSMulHi=0 HasCodeObjectV3=1 MaxVmcnt=15 SupportedSource=1
# Arch caps for gfx803:HasEccHalf=0 Waitcnt0Disabled=0 SeparateVscnt=0 CMPXWritesSGPR=1 HasWave32=0
# Asm caps for gfx900:SupportedISA=1 HasExplicitCO=1 HasExplicitNC=0 HasDirectToLds=1 HasAddLshl=1 HasSMulHi=1 HasCodeObjectV3=1 MaxVmcnt=63 SupportedSource=1
# Arch caps for gfx900:HasEccHalf=0 Waitcnt0Disabled=0 SeparateVscnt=0 CMPXWritesSGPR=1 HasWave32=0
# Asm caps for gfx906:SupportedISA=1 HasExplicitCO=1 HasExplicitNC=0 HasDirectToLds=1 HasAddLshl=1 HasSMulHi=1 HasCodeObjectV3=1 MaxVmcnt=63 SupportedSource=1
# Arch caps for gfx906:HasEccHalf=1 Waitcnt0Disabled=0 SeparateVscnt=0 CMPXWritesSGPR=1 HasWave32=0
# Asm caps for gfx908:SupportedISA=1 HasExplicitCO=1 HasExplicitNC=0 HasDirectToLds=1 HasAddLshl=1 HasSMulHi=1 HasCodeObjectV3=1 MaxVmcnt=63 SupportedSource=1
# Arch caps for gfx908:HasEccHalf=1 Waitcnt0Disabled=1 SeparateVscnt=0 CMPXWritesSGPR=1 HasWave32=0
# Asm caps for gfx1010:SupportedISA=1 HasExplicitCO=1 HasExplicitNC=1 HasDirectToLds=1 HasAddLshl=1 HasSMulHi=1 HasCodeObjectV3=1 MaxVmcnt=63 SupportedSource=0
# Arch caps for gfx1010:HasEccHalf=0 Waitcnt0Disabled=0 SeparateVscnt=1 CMPXWritesSGPR=0 HasWave32=1
# Asm caps for gfx000:SupportedISA=0 HasExplicitCO=0 HasExplicitNC=0 HasDirectToLds=0 HasAddLshl=0 HasSMulHi=0 HasCodeObjectV3=0 MaxVmcnt=0 SupportedSource=1
# Arch caps for gfx000:HasEccHalf=0 Waitcnt0Disabled=0 SeparateVscnt=0 CMPXWritesSGPR=1 HasWave32=0

-- Boost version: 1.65.1
-- Found the following Boost libraries:
--   program_options
--   filesystem
--   system
-- Configuring done
-- Generating done
-- Build files have been written to: /home/alex/Tensile/Tensile/Tests/extended/out/0_Build
[  3%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/KernelArguments.cpp.o
[  6%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/TensorOps.cpp.o
[  9%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/EmbeddedLibrary.cpp.o
[ 12%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/Tensile.cpp.o
[ 15%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/hip/HipHardware.cpp.o
[ 18%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/AMDGPU.cpp.o
[ 21%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/ContractionProblem.cpp.o
[ 25%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/DataTypes.cpp.o
[ 28%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/ContractionSolution.cpp.o
[ 31%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/Debug.cpp.o
[ 34%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/llvm/YAML.cpp.o
[ 40%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/hip/HipSolutionAdapter.cpp.o
[ 40%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/TensorDescriptor.cpp.o
[ 43%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/Utils.cpp.o
[ 46%] Building CXX object lib/CMakeFiles/TensileHost.dir/source/llvm/Loading.cpp.o
[ 50%] Linking CXX static library libTensileHost.a
[ 50%] Built target TensileHost
[ 53%] Building CXX object client/CMakeFiles/TensileClient.dir/source/ReferenceValidator.cpp.o
[ 56%] Building CXX object client/CMakeFiles/TensileClient.dir/source/HardwareMonitor.cpp.o
[ 59%] Building CXX object client/CMakeFiles/TensileClient.dir/source/MetaRunListener.cpp.o
[ 62%] Building CXX object client/CMakeFiles/TensileClient.dir/source/HardwareMonitorListener.cpp.o
[ 65%] Building CXX object client/CMakeFiles/TensileClient.dir/source/DataInitialization.cpp.o
[ 68%] Building CXX object client/CMakeFiles/TensileClient.dir/source/BenchmarkTimer.cpp.o
[ 71%] Building CXX object client/CMakeFiles/TensileClient.dir/source/ConvolutionProblem.cpp.o
[ 75%] Building CXX object client/CMakeFiles/TensileClient.dir/source/Reference.cpp.o
[ 78%] Building CXX object client/CMakeFiles/TensileClient.dir/source/ProgressListener.cpp.o
[ 81%] Building CXX object client/CMakeFiles/TensileClient.dir/source/CSVStackFile.cpp.o
[ 84%] Building CXX object client/CMakeFiles/TensileClient.dir/source/ClientProblemFactory.cpp.o
[ 87%] Building CXX object client/CMakeFiles/TensileClient.dir/source/ResultFileReporter.cpp.o
[ 90%] Building CXX object client/CMakeFiles/TensileClient.dir/source/TimingEvents.cpp.o
[ 93%] Linking CXX static library libTensileClient.a
[ 93%] Built target TensileClient
[ 96%] Building CXX object client/CMakeFiles/tensile_client.dir/main.cpp.o
[100%] Linking CXX executable tensile_client
[100%] Built target tensile_client


Tensor Formats: A:NCHW B:KCYX D:NCHW

Input Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:[0, 0] padEnd:[0, 0] packedFilter:1 packedSpatiol:0 unrollOnChannel:1

Normalized Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:None padEnd:None unrollOnChannel:1

Tensile Index Assignments and Usage:
   Tensile    : ConvChar: Explanation/Usage
  0('I') Free :     'W' : Spatial W. sizeI=W_o strideAI=strideW(2). [strideA:2]
  1('J') Free :     'H' : Spatial H. sizeJ=H_o strideAJ=W_in*strideH(2).
  2('K') Free :     'K' : Cout. sizeK=Cout.
  3('L') Batch:     'N' : Minibatch dimension. sizeL=N. [strideB:0]
  4('M') Sum  :     'C' : Cin.  sizeM=Cin. [strideB:1]

ProblemType Definition:
   OperationType : ConvolutionForward 
   DestDataType : S 
   DataType : S 
   HighPrecisionAccumulate : False 
   NumIndicesC : 4 # [W,H,K,N]
   IndexAssignmentsA : [0, 1, 4, 3] # [W,H,C,N]
   IndexAssignmentsB : [4, 2, 3] # [C,K,N]
   IndicesFree : [0, 1, 2] 
   IndicesBatch : [3] 
   IndicesSummation : [4] 
   SetConstStrideA : [[0, 2]] 
   SetConstStrideB : [[3, 0], [4, 1]] 
   ZeroPadA : [] 
   UseBeta : False 
   UseInitialStridesAB : True 
   AllowNoFreeDims : False 

Solution Assertions:
   AssertSizeEqual : {}
   AssertStrideAEqual : {0: 2}
   AssertStrideBEqual : {2: 0, 0: 1}


################################################################################
# Converting Config to BenchmarkProcess Object
################################################################################



Tensor Formats: A:NCHW B:KCYX D:NCHW

Input Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:[0, 0] padEnd:[0, 0] packedFilter:1 packedSpatiol:0 unrollOnChannel:1

Normalized Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:None padEnd:None unrollOnChannel:1

Tensile Index Assignments and Usage:
   Tensile    : ConvChar: Explanation/Usage
  0('I') Free :     'W' : Spatial W. sizeI=W_o strideAI=strideW(2). [strideA:2]
  1('J') Free :     'H' : Spatial H. sizeJ=H_o strideAJ=W_in*strideH(2).
  2('K') Free :     'K' : Cout. sizeK=Cout.
  3('L') Batch:     'N' : Minibatch dimension. sizeL=N. [strideB:0]
  4('M') Sum  :     'C' : Cin.  sizeM=Cin. [strideB:1]

ProblemType Definition:
   OperationType : ConvolutionForward 
   DestDataType : S 
   DataType : S 
   HighPrecisionAccumulate : False 
   NumIndicesC : 4 # [W,H,K,N]
   IndexAssignmentsA : [0, 1, 4, 3] # [W,H,C,N]
   IndexAssignmentsB : [4, 2, 3] # [C,K,N]
   IndicesFree : [0, 1, 2] 
   IndicesBatch : [3] 
   IndicesSummation : [4] 
   SetConstStrideA : [[0, 2]] 
   SetConstStrideB : [[3, 0], [4, 1]] 
   ZeroPadA : [] 
   UseBeta : False 
   UseInitialStridesAB : True 
   AllowNoFreeDims : False 

Solution Assertions:
   AssertSizeEqual : {}
   AssertStrideAEqual : {0: 2}
   AssertStrideBEqual : {2: 0, 0: 1}

# Filling in Parameters With Defaults
# Convert Parameters to Steps
# Benchmark Common Parameters
# Fork Parameters
# Benchmark Fork Parameters
# Join Parameters
# Benchmark Join Parameters
# Benchmark Final
# NumBenchmarkSteps: 1

################################################################################
# Done Creating BenchmarkProcess Object
################################################################################
# Empty winners - use fast initialization of hardcodedParameters


################################################################################
# BenchmarkStep: Cijkl_Aijml_Bmkl_SI_00 - 00_Final 114.193s
# NumProblems: 16
# BenchmarkParameters:
# MaxPossibleSolutions: 4 = 4 (hardcoded) * 1 (benchmark)
# Enumerating Solutions


Tensor Formats: A:NCHW B:KCYX D:NCHW

Input Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:[0, 0] padEnd:[0, 0] packedFilter:1 packedSpatiol:0 unrollOnChannel:1

Normalized Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:None padEnd:None unrollOnChannel:1

Tensile Index Assignments and Usage:
   Tensile    : ConvChar: Explanation/Usage
  0('I') Free :     'W' : Spatial W. sizeI=W_o strideAI=strideW(2). [strideA:2]
  1('J') Free :     'H' : Spatial H. sizeJ=H_o strideAJ=W_in*strideH(2).
  2('K') Free :     'K' : Cout. sizeK=Cout.
  3('L') Batch:     'N' : Minibatch dimension. sizeL=N. [strideB:0]
  4('M') Sum  :     'C' : Cin.  sizeM=Cin. [strideB:1]

ProblemType Definition:
   OperationType : ConvolutionForward 
   DestDataType : S 
   DataType : S 
   HighPrecisionAccumulate : False 
   NumIndicesC : 4 # [W,H,K,N]
   IndexAssignmentsA : [0, 1, 4, 3] # [W,H,C,N]
   IndexAssignmentsB : [4, 2, 3] # [C,K,N]
   IndicesFree : [0, 1, 2] 
   IndicesBatch : [3] 
   IndicesSummation : [4] 
   SetConstStrideA : [[0, 2]] 
   SetConstStrideB : [[3, 0], [4, 1]] 
   ZeroPadA : [] 
   UseBeta : False 
   UseInitialStridesAB : True 
   AllowNoFreeDims : False 

Solution Assertions:
   AssertSizeEqual : {}
   AssertStrideAEqual : {0: 2}
   AssertStrideBEqual : {2: 0, 0: 1}


reject: NumThreads 512 % totalVectors 128 != 0

reject: No valid DepthU found
rejecting solution Cijkl_Aijml_Bmkl_SI_MT32x512x4_MI32x32x1x2_SE_APM1_AF0EM4_AF1EM4_AMASn1_ASE_ASAE02_ASBE20_01_ASEM4_BL1_BS1_CDO0_CTDA0_DU4_DTL0_DAF0_DKP0_ETSP_EPS1_FL0_GR2A1_GR2B1_GRCGA1_GRCGB1_GRCVA1_GRCVB1_GRVW1_GSU1_GSUSARR1_GSUWGMRR0_ISA908_IU1_IA0_KLA_LEL1_LPA0_LPB0_LDL1_LR2A1_LR2B1_LW2A1_LW2B1_LDW0_LT1_MTSM64_MTSM1_MDA2_MI32_32_1_2_MO40_MVN256_MVN0_NTA0_NTB0_NTC0_NLCA1_NLCB1_ONLL1_PBD0_PFD1_PG2_PSD0_PSLn1_PWCn1_PWLn1_PK0_PAP0_PGR1_PLR1_RK0_SGR1_SIA1_SLW1_SU32_SUM0_SUS256_SVW4_SNLL0_TT1_32_UIIDU0_UMF0_U64SL1_USFGROn1_VAW1_VS1_VW4_WG16_32_1_WGM8_WGMTB
[||||||||||||||||||                                                       ]  25%

Tensor Formats: A:NCHW B:KCYX D:NCHW

Input Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:[0, 0] padEnd:[0, 0] packedFilter:1 packedSpatiol:0 unrollOnChannel:1

Normalized Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:None padEnd:None unrollOnChannel:1

Tensile Index Assignments and Usage:
   Tensile    : ConvChar: Explanation/Usage
  0('I') Free :     'W' : Spatial W. sizeI=W_o strideAI=strideW(2). [strideA:2]
  1('J') Free :     'H' : Spatial H. sizeJ=H_o strideAJ=W_in*strideH(2).
  2('K') Free :     'K' : Cout. sizeK=Cout.
  3('L') Batch:     'N' : Minibatch dimension. sizeL=N. [strideB:0]
  4('M') Sum  :     'C' : Cin.  sizeM=Cin. [strideB:1]

ProblemType Definition:
   OperationType : ConvolutionForward 
   DestDataType : S 
   DataType : S 
   HighPrecisionAccumulate : False 
   NumIndicesC : 4 # [W,H,K,N]
   IndexAssignmentsA : [0, 1, 4, 3] # [W,H,C,N]
   IndexAssignmentsB : [4, 2, 3] # [C,K,N]
   IndicesFree : [0, 1, 2] 
   IndicesBatch : [3] 
   IndicesSummation : [4] 
   SetConstStrideA : [[0, 2]] 
   SetConstStrideB : [[3, 0], [4, 1]] 
   ZeroPadA : [] 
   UseBeta : False 
   UseInitialStridesAB : True 
   AllowNoFreeDims : False 

Solution Assertions:
   AssertSizeEqual : {}
   AssertStrideAEqual : {0: 2}
   AssertStrideBEqual : {2: 0, 0: 1}


reject: NumThreads 512 % totalVectors 256 != 0

reject: No valid DepthU found
rejecting solution Cijkl_Aijml_Bmkl_SI_MT32x512x8_MI32x32x1x2_SE_APM1_AF0EM4_AF1EM4_AMASn1_ASE_ASAE02_ASBE20_01_ASEM4_BL1_BS1_CDO0_CTDA0_DU8_DTL0_DAF0_DKP0_ETSP_EPS1_FL0_GR2A1_GR2B1_GRCGA1_GRCGB1_GRCVA1_GRCVB1_GRVW1_GSU1_GSUSARR1_GSUWGMRR0_ISA908_IU1_IA0_KLA_LEL1_LPA0_LPB0_LDL1_LR2A1_LR2B1_LW2A1_LW2B1_LDW0_LT1_MTSM64_MTSM1_MDA2_MI32_32_1_2_MO40_MVN256_MVN0_NTA0_NTB0_NTC0_NLCA1_NLCB1_ONLL1_PBD0_PFD1_PG2_PSD0_PSLn1_PWCn1_PWLn1_PK0_PAP0_PGR1_PLR1_RK0_SGR1_SIA1_SLW1_SU32_SUM0_SUS256_SVW4_SNLL0_TT1_32_UIIDU0_UMF0_U64SL1_USFGROn1_VAW1_VS1_VW4_WG16_32_1_WGM8_WGMTB
[||||||||||||||||||||||||||||||||||||                                     ]  50%

Tensor Formats: A:NCHW B:KCYX D:NCHW

Input Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:[0, 0] padEnd:[0, 0] packedFilter:1 packedSpatiol:0 unrollOnChannel:1

Normalized Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:None padEnd:None unrollOnChannel:1

Tensile Index Assignments and Usage:
   Tensile    : ConvChar: Explanation/Usage
  0('I') Free :     'W' : Spatial W. sizeI=W_o strideAI=strideW(2). [strideA:2]
  1('J') Free :     'H' : Spatial H. sizeJ=H_o strideAJ=W_in*strideH(2).
  2('K') Free :     'K' : Cout. sizeK=Cout.
  3('L') Batch:     'N' : Minibatch dimension. sizeL=N. [strideB:0]
  4('M') Sum  :     'C' : Cin.  sizeM=Cin. [strideB:1]

ProblemType Definition:
   OperationType : ConvolutionForward 
   DestDataType : S 
   DataType : S 
   HighPrecisionAccumulate : False 
   NumIndicesC : 4 # [W,H,K,N]
   IndexAssignmentsA : [0, 1, 4, 3] # [W,H,C,N]
   IndexAssignmentsB : [4, 2, 3] # [C,K,N]
   IndicesFree : [0, 1, 2] 
   IndicesBatch : [3] 
   IndicesSummation : [4] 
   SetConstStrideA : [[0, 2]] 
   SetConstStrideB : [[3, 0], [4, 1]] 
   ZeroPadA : [] 
   UseBeta : False 
   UseInitialStridesAB : True 
   AllowNoFreeDims : False 

Solution Assertions:
   AssertSizeEqual : {}
   AssertStrideAEqual : {0: 2}
   AssertStrideBEqual : {2: 0, 0: 1}


reject: No valid DepthU found
rejecting solution Cijkl_Aijml_Bmkl_SI_MT32x512x4_MI32x32x1x2_SE_APM1_AF0EM4_AF1EM4_AMASn1_ASE_ASAE02_ASBE20_01_ASEM4_BL1_BS1_CDO0_CTDA0_DU4_DTL0_DAF0_DKP0_ETSP_EPS1_FL1_GR2A1_GR2B1_GRCGA1_GRCGB1_GRCVA1_GRCVB1_GRVW1_GSU1_GSUSARR1_GSUWGMRR0_ISA908_IU1_IA0_KLA_LEL1_LPA0_LPB0_LDL1_LR2A1_LR2B1_LW2A1_LW2B1_LDW0_LT1_MTSM64_MTSM1_MDA2_MI32_32_1_2_MO40_MVN256_MVN0_NTA0_NTB0_NTC0_NLCA1_NLCB1_ONLL1_PBD0_PFD1_PG2_PSD0_PSLn1_PWCn1_PWLn1_PK0_PAP0_PGR1_PLR1_RK0_SGR1_SIA1_SLW1_SU32_SUM0_SUS256_SVW4_SNLL0_TT1_32_UIIDU0_UMF0_U64SL1_USFGROn1_VAW1_VS1_VW4_WG16_32_1_WGM8_WGMTB
[||||||||||||||||||||||||||||||||||||||||||||||||||||||                   ]  75%

Tensor Formats: A:NCHW B:KCYX D:NCHW

Input Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:[0, 0] padEnd:[0, 0] packedFilter:1 packedSpatiol:0 unrollOnChannel:1

Normalized Conv: filter:[1, 1] stride:[2, 2] dilation:[1, 1] spatial:tbd group:1 padStart:None padEnd:None unrollOnChannel:1

Tensile Index Assignments and Usage:
   Tensile    : ConvChar: Explanation/Usage
  0('I') Free :     'W' : Spatial W. sizeI=W_o strideAI=strideW(2). [strideA:2]
  1('J') Free :     'H' : Spatial H. sizeJ=H_o strideAJ=W_in*strideH(2).
  2('K') Free :     'K' : Cout. sizeK=Cout.
  3('L') Batch:     'N' : Minibatch dimension. sizeL=N. [strideB:0]
  4('M') Sum  :     'C' : Cin.  sizeM=Cin. [strideB:1]

ProblemType Definition:
   OperationType : ConvolutionForward 
   DestDataType : S 
   DataType : S 
   HighPrecisionAccumulate : False 
   NumIndicesC : 4 # [W,H,K,N]
   IndexAssignmentsA : [0, 1, 4, 3] # [W,H,C,N]
   IndexAssignmentsB : [4, 2, 3] # [C,K,N]
   IndicesFree : [0, 1, 2] 
   IndicesBatch : [3] 
   IndicesSummation : [4] 
   SetConstStrideA : [[0, 2]] 
   SetConstStrideB : [[3, 0], [4, 1]] 
   ZeroPadA : [] 
   UseBeta : False 
   UseInitialStridesAB : True 
   AllowNoFreeDims : False 

Solution Assertions:
   AssertSizeEqual : {}
   AssertStrideAEqual : {0: 2}
   AssertStrideBEqual : {2: 0, 0: 1}


reject: No valid DepthU found
rejecting solution Cijkl_Aijml_Bmkl_SI_MT32x512x8_MI32x32x1x2_SE_APM1_AF0EM4_AF1EM4_AMASn1_ASE_ASAE02_ASBE20_01_ASEM4_BL1_BS1_CDO0_CTDA0_DU8_DTL0_DAF0_DKP0_ETSP_EPS1_FL1_GR2A1_GR2B1_GRCGA1_GRCGB1_GRCVA1_GRCVB1_GRVW1_GSU1_GSUSARR1_GSUWGMRR0_ISA908_IU1_IA0_KLA_LEL1_LPA0_LPB0_LDL1_LR2A1_LR2B1_LW2A1_LW2B1_LDW0_LT1_MTSM64_MTSM1_MDA2_MI32_32_1_2_MO40_MVN256_MVN0_NTA0_NTB0_NTC0_NLCA1_NLCB1_ONLL1_PBD0_PFD1_PG2_PSD0_PSLn1_PWCn1_PWLn1_PK0_PAP0_PGR1_PLR1_RK0_SGR1_SIA1_SLW1_SU32_SUM0_SUS256_SVW4_SNLL0_TT1_32_UIIDU0_UMF0_U64SL1_USFGROn1_VAW1_VS1_VW4_WG16_32_1_WGM8_WGMTB
[|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||] 100% (0.0 secs elapsed)
# Updating winners since enumeration removed unused hardcoded solutions.  removeHardcoded=4 winners=0

# Actual Solutions: 0 / 4

Tensile::FATAL: Your parameters resulted in 0 valid solutions.
Examine reject and backtrace messages above to see why and where solutions were rejected.
