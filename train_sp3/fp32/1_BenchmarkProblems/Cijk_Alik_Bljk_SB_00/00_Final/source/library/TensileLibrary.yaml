---
library:
  rows:
  - library: {index: 0, type: Single}
    predicate:
      type: And
      value:
      - {index: 0, type: BoundSizeMultiple, value: 8}
      - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
      - {index: 0, type: FreeSizeAMultiple, value: 8}
      - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
      - type: TypesEqual
        value: [Float, Float, Float, Float]
      - {type: HighPrecisionAccumulate, value: false}
  type: Problem
solutions:
- debugKernel: false
  hardwarePredicate:
    type: AMDGPU
    value: {type: Processor, value: gfx908}
  ideals: {}
  index: 0
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '8', AssertFree1ElementMultiple: '1',
    AssertSummationElementMultiple: '8', AssignedDerivedParameters: 'False', AssignedProblemIndependentDerivedParameters: 'True',
    BufferLoad: 'True', BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False',
    DepthU: '32', DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False',
    DisableAtomicFail: '0', DisableKernelPieces: '0', EdgeType: ShiftPtr, ExpandPointerSwap: 'True',
    FractionalLoad: '0', GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '4', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '4',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[9, 0, 8]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '32', LSCB: '32', LSPA: '32',
    LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True',
    LdsNumElements: '14336', LdsNumElementsAlignedA: '2048', LdsNumElementsAlignedB: '4096',
    LdsOffsetA: '0', LdsOffsetA_Blk: '8192', LdsOffsetB: '2048', LdsOffsetB_Blk: '10240',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False',
    LocalWriteUseSgprB: 'False', LoopDoWhile: 'False', LoopTail: 'True', LoopUnroll: '32',
    MacroTile0: '64', MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MaxOccupancy: '40', MaxVgprNumber: '256', MinVgprNumber: '0',
    NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'True',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', SubGroup0: '16', SubGroup1: '16',
    SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False', ThreadTile: '[4,
      8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    UnrollMemFence: 'False', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8',
    WorkGroupMappingType: B, _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT64x128x32_SE_K1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: BoundSizeMultiple, value: 8}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {index: 0, type: FreeSizeAMultiple, value: 8}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStrides: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 128, 1]
    packBatchDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
...
